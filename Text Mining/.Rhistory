install.packages("mallet")
library(mallet)
cc <- read.csv("data/citizensconnect.csv")
install.packages (“tm”)
install.packages (“wordcloud”)
install.packages (“tm”)
install.packages (“tm”)
install.packages("tm")
install.packages (“wordcloud”)
install.packages("wordcloud")
install.packages("RColorBrewer")
library(tm)
library(wordcloud)
library(RColorBrewer)
trump = “/Users/mohsennabian/Dropbox/Spring 2106/Visualization/Text Mining/Trump.docx”
trump = “/Users/mohsennabian/Dropbox/Spring 2106/Visualization/Text Mining/Trump.docx”
trump = “/Users/mohsennabian/Dropbox/Spring 2106/Visualization/Text Mining/Trump.docx”
trump = '/Users/mohsennabian/Dropbox/Spring 2106/Visualization/Text Mining/Trump.docx'
modi_txt = readLines(trump)
modi<-Corpus(VectorSource(modi_txt))
modi_data<-tm_map(modi,stripWhitespace)
modi_data<-tm_map(modi_data,tolower)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data<-tm_map(modi_data,removePunctuation)
modi_data<-tm_map(modi_data,removeWords, stopwords(“english”))
modi_data<-tm_map
(modi_data,
removeWords, c(“and”,”the”,”our”,”that”,”for”,”are”,”also”,”more”,”has”,”must”,”have”,”should”,”this”,”with”))
modi_data<-tm_map
tdm_modi<-TermDocumentMatrix (modi_data) #Creates a TDM
tdm_modi<-TermDocumentMatrix (modi_data) #Creates a TDM
TDM1<-as.matrix(tdm_modi) #Convert this into a matrix format
v = sort(rowSums(TDM1), decreasing = TRUE) #Gives you the frequencies for every word
Summary(v)
tdm_modi<-TermDocumentMatrix (modi_data) #Creates a TDM
modi_data<-tm_map
tdm_modi<-TermDocumentMatrix (modi_data) #Creates a TDM
tdm_modi<-TermDocumentMatrix (modi_data) #Creates a TDM
TDM1<-as.matrix(tdm_modi) #Convert this into a matrix format
v = sort(rowSums(TDM1), decreasing = TRUE) #Gives you the frequencies for every word
Summary(v)
wordcloud (modi_data, scale=c(5,0.5), max.words=1, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors=brewer.pal(8, “Dark2″))
trump
modi_txt
modi
modi_txt = readLines(trump)
trump = '/Users/mohsennabian/Dropbox/Spring 2106/Visualization/Text Mining/Trump.docx'
trump = '/Users/mohsennabian/Dropbox/Spring 2106/Visualization/Text Mining/Trump.txt'
modi_txt = readLines(trump)
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<-tm_map(modi_data,tolower)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data<-tm_map(modi_data,removePunctuation)
modi_txt = readLines(trump)
readLines("Hi, My name is Mohsen.")
readLines("/Users/mohsennabian/Dropbox/Spring 2106/Visualization/Text Mining/Clinton.docx")
readLines("/Users/mohsennabian/Dropbox/Spring 2106/Visualization/Text Mining/Trump.txt")
readLines("/Users/mohsennabian/Dropbox/Spring 2106/Visualization/Text Mining/Trump.txt")
trump = '/Users/mohsennabian/Dropbox/Spring 2106/Visualization/Text Mining/Trump.txt'
modi_txt = readLines(trump)
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<-tm_map(modi_data,tolower)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data<-tm_map(modi_data,removePunctuation)
modi_data<-tm_map
tdm_modi<-TermDocumentMatrix (modi_data) #Creates a TDM
modi_data<-tm_map
tm_map
tdm_modi<-TermDocumentMatrix (modi_data) #Creates a TDM
modi
modi_txt = readLines(trump)
modi_txt
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<-tm_map(modi_data,tolower)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data<-tm_map(modi_data,removePunctuation)
tdm_modi<-TermDocumentMatrix (modi_data) #Creates a TDM
modi_txt = readLines(trump)
modi_txt
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<-tm_map(modi_data,tolower)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data<-tm_map(modi_data,removePunctuation)
tdm_modi<-TermDocumentMatrix (modi_data) #Creates a TDM
tdm_modi<-TermDocumentMatrix (modi_data) #Creates a TDM
modi_data <- tm_map(modi_data, removeWords, stopwords(“english”))
modi_data <- tm_map(modi_data, removeWords, stopwords('english'))
modi_data <- tm_map(modi_data, stemDocument)
modi_data
wordcloud(modi_data, scale=c(5,0.5), max.words=100, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors=brewer.pal(8, “Dark2”))
wordcloud(modi_data, scale=c(5,0.5), max.words=100, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE)
modi_txt = readLines(trump)
modi_txt
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<-tm_map(modi_data,tolower)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data <- tm_map(modi_data, removeWords, stopwords('english'))
modi_data<-tm_map(modi_data,removePunctuation)
wordcloud(modi_data, scale=c(5,0.5), max.words=100, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE)
modi_data<-tm_map(modi_data,tolower)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data <- tm_map(modi_data, removeWords, stopwords('english'))
modi_data<-tm_map(modi_data,removePunctuation)
modi_data <- tm_map(modi_data, stemDocument)
modi_data <- tm_map(modi_data, stemDocument)
wordcloud(modi_data, scale=c(5,0.5), max.words=100, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE)
seuss.corpus
trump = '/Users/mohsennabian/Dropbox/Spring 2106/Visualization/Text Mining/Trump.txt'
modi_txt = readLines(trump)
modi_txt
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<-tm_map(modi_data,tolower)
inspect(modi_data)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data <- tm_map(modi_data, removeWords, stopwords('english'))
modi_data<-tm_map(modi_data,removePunctuation)
modi_data <- tm_map(modi_data, stemDocument)
inspect(modi_data)
modi_txt = readLines(trump)
modi_txt
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<-tm_map(modi_data,tolower)
inspect(modi_data)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data <- tm_map(modi_data, removeWords, stopwords('english'))
modi_data<-tm_map(modi_data,removePunctuation)
inspect(modi_data)
wordcloud(modi_data, scale=c(5,0.5), max.words=100, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE)
wordcloud(modi_data, max.words=100, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE)
wordcloud(modi_data, max.words=100)
trump = '/Users/mohsennabian/Dropbox/Spring 2106/Visualization/Text Mining/Trump.txt'
modi_txt = readLines(trump)
modi_txt
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<- tm_map(modi_data, content_transformer(tolower))
inspect(modi_data)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data <- tm_map(modi_data, removeWords, stopwords('english'))
modi_data<-tm_map(modi_data,removePunctuation)
modi_data <- tm_map(modi_data, stemDocument)
inspect(modi_data)
modi_txt = readLines(trump)
modi_txt
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<- tm_map(modi_data, content_transformer(tolower))
inspect(modi_data)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data <- tm_map(modi_data, removeWords, stopwords('english'))
modi_data<-tm_map(modi_data,removePunctuation)
inspect(modi_data)
inspect(modi_data)
wordcloud(modi_data, max.words=100)
wordcloud(modi_data, max.words=200)
modi_data <- tm_map(modi_data, content_transformer(stemDocument))
stemDocument(modi_data[[1]])
modi_data[[1]]
install.packages('SnowballC')
library(SnowballC)
modi_txt = readLines(trump)
modi_txt
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<- tm_map(modi_data, content_transformer(tolower))
inspect(modi_data)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data <- tm_map(modi_data, removeWords, stopwords('english'))
modi_data<-tm_map(modi_data,removePunctuation)
modi_data <- tm_map(modi_data, content_transformer(stemDocument))
wordcloud(modi_data, max.words=200)
wordcloud(modi_data, max.words=200, colors=”black”)
wordcloud(modi_data, max.words=200, colors='black')
wordcloud(modi_data, max.words=200, colors='blue')
clinton='/Users/mohsennabian/Dropbox/Spring 2106/Visualization/Text Mining/Clinton.txt'
modi_txt = readLines(clinton)
modi_txt
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<- tm_map(modi_data, content_transformer(tolower))
inspect(modi_data)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data <- tm_map(modi_data, removeWords, stopwords('english'))
modi_data<-tm_map(modi_data,removePunctuation)
modi_data <- tm_map(modi_data, content_transformer(stemDocument))
inspect(modi_data)
wordcloud(modi_data, max.words=200, colors='blue')
tdm_modi<-TermDocumentMatrix (modi_data) #Creates a TDM
TDM1<-as.matrix(tdm_modi) #Convert this into a matrix format
v = sort(rowSums(TDM1), decreasing = TRUE) #Gives you the frequencies for every word
Summary(v)
wordcloud (modi_data, scale=c(5,0.5), max.words=1, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors=brewer.pal(8, “Dark2″))
wordcloud(modi_data, max.words=200, colors='red')
wordcloud(modi_data, max.words=200, colors='red')
modi_txt = readLines(cruz)
modi_txt
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<- tm_map(modi_data, content_transformer(tolower))
inspect(modi_data)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data <- tm_map(modi_data, removeWords, stopwords('english'))
modi_data<-tm_map(modi_data,removePunctuation)
modi_data <- tm_map(modi_data, content_transformer(stemDocument))
inspect(modi_data)
wordcloud(modi_data, max.words=200, colors='red')
tdm_modi<-TermDocumentMatrix (modi_data) #Creates a TDM
v = sort(rowSums(TDM1), decreasing = TRUE) #Gives you the frequencies for every word
TDM1<-as.matrix(tdm_modi) #Convert this into a matrix format
Summary(v)
wordcloud (modi_data, scale=c(5,0.5), max.words=1, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors=brewer.pal(8, “Dark2″))
cruz='/Users/mohsennabian/Dropbox/Spring 2106/Visualization/Text Mining/Cruz.txt'
sanders='/Users/mohsennabian/Dropbox/Spring 2106/Visualization/Text Mining/Sanders.txt'
modi_txt = readLines(cruz)
modi_txt
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<- tm_map(modi_data, content_transformer(tolower))
inspect(modi_data)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data <- tm_map(modi_data, removeWords, stopwords('english'))
modi_data<-tm_map(modi_data,removePunctuation)
modi_data <- tm_map(modi_data, content_transformer(stemDocument))
inspect(modi_data)
wordcloud(modi_data, max.words=200, colors='red')
wordcloud(modi_data, max.words=200, colors='blue')
wordcloud(modi_data, max.words=400, colors='blue')
wordcloud(modi_data, max.words=400, colors='blue')
modi_txt = readLines(sanders)
modi_txt
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<- tm_map(modi_data, content_transformer(tolower))
inspect(modi_data)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data <- tm_map(modi_data, removeWords, stopwords('english'))
modi_data<-tm_map(modi_data,removePunctuation)
modi_data <- tm_map(modi_data, content_transformer(stemDocument))
inspect(modi_data)
wordcloud(modi_data, max.words=400, colors='blue')
wordcloud(modi_data, max.words=400, colors='blue')
modi_txt = readLines(cruz)
modi_txt
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<- tm_map(modi_data, content_transformer(tolower))
inspect(modi_data)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data <- tm_map(modi_data, removeWords, stopwords('english'))
modi_data<-tm_map(modi_data,removePunctuation)
modi_data <- tm_map(modi_data, content_transformer(stemDocument))
inspect(modi_data)
wordcloud(modi_data, max.words=400, colors='red')
modi_txt = readLines(trump)
modi_txt
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<- tm_map(modi_data, content_transformer(tolower))
inspect(modi_data)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data <- tm_map(modi_data, removeWords, stopwords('english'))
modi_data<-tm_map(modi_data,removePunctuation)
modi_data <- tm_map(modi_data, content_transformer(stemDocument))
inspect(modi_data)
wordcloud(modi_data, max.words=400, colors='red')
modi_txt = readLines(clinton)
modi_txt
modi<-Corpus(VectorSource(modi_txt))
modi
modi_data<-tm_map(modi,stripWhitespace)
modi_data<- tm_map(modi_data, content_transformer(tolower))
inspect(modi_data)
modi_data<-tm_map(modi_data,removeNumbers)
modi_data <- tm_map(modi_data, removeWords, stopwords('english'))
modi_data<-tm_map(modi_data,removePunctuation)
modi_data <- tm_map(modi_data, content_transformer(stemDocument))
inspect(modi_data)
wordcloud(modi_data, max.words=400, colors='blue')
