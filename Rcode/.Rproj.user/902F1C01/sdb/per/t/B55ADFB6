{
    "contents" : "# install our packages, skip if you already have\ninstall.packages(\"choroplethr\")\ninstall.packages(\"choroplethrMaps\")\ninstall.packages(\"maptools\")\ninstall.packages(\"rgeos\")\ninstall.packages(\"rgdal\")\ninstall.packages(\"mapdata\")\ninstall.packages(\"gridExtra\")\ninstall.packages(\"leaflet\")\n# quickstart - render choropleth maps of census data in R\nlibrary(choroplethr)\nlibrary(choroplethrMaps)\n\n# go through tutorials and code for this package\nbrowseVignettes(\"choroplethr\")\n\n\nlibrary(maps)\nlibrary(mapdata)\nlibrary(gridExtra)\nlibrary(rgeos)\nlibrary(ggplot2)\nlibrary(sp)\n\n\n# Download boston neighborhood shape file from\n# https://data.cityofboston.gov/City-Services/Boston-Neighborhood-Shapefiles/af56-j7tb\n# load shapefile\nlibrary(maptools)\nbos <- readShapeSpatial(\"data/BOSnbhds/Bos_neighborhoods_new.shp\")\nplot(bos)\n\n# this is an alternative (more powerful) library for loading shapefiles \nlibrary(rgdal)\nbos <- readOGR(dsn=\"data/BOSnbhds\", layer=\"Bos_neighborhoods_new\")\nplot(bos)\n\n\n#explore the data contained in the shape file\nsummary(bos)          # the summary - mean coord, areas etc.\nstr(bos,max.level=2)  # the shape file has a complex class structure\nbos@data              # the data frame of attributes of each polygon \nbos@data$Name         # names of the neighborhoods\nbos@bbox              # bounding box - these are not lat/lon coordinates, but the massachusetts state coordinate system, NAD83\n\n# plot shapefile with ggplot\n# first, we need to convert the shapefile so that we can use it in ggplot, result is a data frame\nlibrary(ggplot2)\nbos.fort <- fortify(bos,region='OBJECTID')\n\n#now plot it as polygons\ng <- ggplot(data = bos.fort, aes(x = long, y = lat, group=group)) + geom_polygon(color='grey',fill=\"white\", size=I(0.3)) \ng\n\n# add a constraint for 1:1 aspect ratio\ng <- g + coord_fixed()\ng\n\n# set white background, no axes\ng <- g + theme_minimal()\ng\n\n# now lets load additional data and display it\ncc <- read.csv(\"data/citizensconnect_columns.txt\", sep = \"\\t\")\n\ng <- g + geom_point(data=cc,aes(x=CASE_X, y=CASE_Y,group=NULL, shape =SUBJECT, color=REASON), size=I(3), alpha=I(0.7))\ng\n\n# use qualitative palette from brewer color\ng <- g + scale_color_brewer(type=\"qual\")\ng\n\n# we can save the data as a shapefile\n# first, we create a second data set that only contains the elements with geo-coordinates\ncc2 <- cc[!is.na(cc$CASE_X),]\n\n# then we convert this new data frame into a spatial data frame\ncoordinates(cc2)<- c(\"CASE_X\", \"CASE_Y\")\nclass(cc2)\n# we can save this spatial data frame now as a shapefile, which we can open in cartoDB or GIS software\nwritePointsShape(cc2, \"out/cc.shp\")\n\n# interactive maps with leaflet\n# consult http://rstudio.github.io/leaflet \n\nlibrary(leaflet)\nboswgs84 <- readOGR(dsn=\"data/bos_tracts/\", layer=\"bos_tracts\")\ncclatlon <- read.csv(file=\"data/citizensconnect_latlon.csv\")\npal <- colorNumeric( palette = \"Blues\", domain = boswgs84@data$POP100_RE)\n\nmap <- leaflet()\nmap %>% \n  addPolygons(data=boswgs84, stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1, color = ~pal(boswgs84@data$POP100_RE), opacity=0.5) %>% \n  addCircleMarkers(~lon,~lat,radius = 2, weight = 4, popup=~service_name,  color='yellow', data=cclatlon)\n  \n\n# further ideas for working with projections\n# http://rpsychologist.com/working-with-shapefiles-projections-and-world-maps-in-ggplot\n#",
    "created" : 1447083923903.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1887755760",
    "id" : "B55ADFB6",
    "lastKnownWriteTime" : 1447084975,
    "path" : "/Volumes/Dropbox/INTDISC_DSSH6302/Rcode/M09_maps.R",
    "project_path" : "M09_maps.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}